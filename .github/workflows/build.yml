name: ubuntu-build

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - '.github/workflows/**'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout this module
      uses: actions/checkout@v4
      with:
        path: module-src
        fetch-depth: 1


    - name: Checkout AzerothCore (Playerbot branch)
      uses: actions/checkout@v4
      with:
        repository: mod-playerbots/azerothcore-wotlk
        ref: Playerbot
        path: azerothcore-wotlk
        fetch-depth: 1


    - name: Debug git state
      working-directory: azerothcore-wotlk
      run: |
        git rev-parse --abbrev-ref HEAD
        git log --oneline -n 5


    - name: Copy module into azerothcore-wotlk/modules
      run: |
        mkdir -p azerothcore-wotlk/modules
        cp -r module-src azerothcore-wotlk/modules/mod-guild-village


    - name: Install build deps
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          clang \
          ccache \
          libmysqlclient-dev \
          libssl-dev \
          libreadline-dev \
          zlib1g-dev \
          libbz2-dev \
          libncurses-dev \
          libboost-all-dev \
          git

    - name: Restore ccache cache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ runner.os }}-${{ hashFiles('module-src/**/*.cpp', 'module-src/**/*.h', 'module-src/CMakeLists.txt') }}
        restore-keys: |
          ccache-${{ runner.os }}-

    - name: Configure CMake
      working-directory: azerothcore-wotlk
      run: |
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DCMAKE_INSTALL_PREFIX=env/dist \
          -DTOOLS=ON \
          -DSCRIPTS=static \
          -DWITH_PLAYERBOTS=1 \
          -DWITH_WARNINGS=1 \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build worldserver
      working-directory: azerothcore-wotlk/build
      run: |
        make -j"$(nproc)" worldserver

    - name: Install to env/dist
      working-directory: azerothcore-wotlk/build
      run: |
        make install
        
    - name: Save ccache stats
      run: |
        ccache -s || true
